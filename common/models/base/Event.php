<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\helpers\ArrayHelper;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "events".
 *
 * @property integer $event_id
 * @property integer $tour_id
 * @property string $event_name
 * @property string $description
 * @property string $event_date
 * @property string $start_time
 * @property string $end_time
 * @property string $location
 * @property string $created_at
 * @property string $updated_at
 *
 * @property \common\models\Tour $tour
 */
abstract class Event extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'events';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        $behaviors = parent::behaviors();
        // $behaviors['timestamp'] = [
        //     'class' => TimestampBehavior::class,
        //                 ];
        
    return $behaviors;
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        $parentRules = parent::rules();
        return ArrayHelper::merge($parentRules, [
            [['tour_id', 'description'], 'default', 'value' => null],
            [['tour_id'], 'integer'],
            [['event_name', 'event_date', 'start_time', 'end_time', 'location'], 'required'],
            [['description'], 'string'],
            [['event_date', 'start_time', 'end_time'], 'safe'],
            [['event_name', 'location'], 'string', 'max' => 100],
            [['tour_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Tour::class, 'targetAttribute' => ['tour_id' => 'tour_id']]
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return ArrayHelper::merge(parent::attributeLabels(), [
            'event_id' => Yii::t('app', 'Event ID'),
            'tour_id' => Yii::t('app', 'Tour ID'),
            'event_name' => Yii::t('app', 'Event Name'),
            'description' => Yii::t('app', 'Description'),
            'event_date' => Yii::t('app', 'Event Date'),
            'start_time' => Yii::t('app', 'Start Time'),
            'end_time' => Yii::t('app', 'End Time'),
            'location' => Yii::t('app', 'Location'),
            'created_at' => Yii::t('app', 'Created At'),
            'updated_at' => Yii::t('app', 'Updated At'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTour()
    {
        return $this->hasOne(\common\models\Tour::class, ['tour_id' => 'tour_id']);
    }

}
